////////////////////////////////////////////
////////////////////////////////////////////
//
// 			  Logger Routines
//
////////////////////////////////////////////
////////////////////////////////////////////

var useLogging = true;

function setEnabled(enabled)
{
    useLogging = enabled;
}

function _Log()
{
	return useLogging && console.log && Function.apply.call(console.log, console, arguments);
}


function _Instrument(funcName, params)
{
	if (useLogging)
    {
	    if (params !== undefined)
	    {
		    console.group("%s - parameters: %O", funcName, params);
	    }
        else
        {
		    console.group(funcName);
	    }
    }
}


function _InstrumentEnd(funcName, params)
{
	if (!useLogging) return;
	if (params !== undefined)
	{
		console.log("[%s] Returning %O", funcName, params);
	}
	console.groupEnd("");
}


var Logger = {
    Instrument: _Instrument,
    InstrumentEnd: _InstrumentEnd,
    Log: _Log,
    setEnabled: setEnabled
};

// CommonJS & AMD
if (typeof define !== 'undefined' && define.amd)
{
    define([], function() { return Logger; });
}

// Node.js
if (typeof module !== 'undefined' && module.exports)
{
    module.exports = Logger;
}

// Browser
if (typeof window === 'object')
{
    (function () {
        var old = window['logger'];
        Logger.swap = function () {
            window['logger'] = old;
            return Logger;
        };
    })();

    window['logger'] = Logger;
}
